---
- hosts: Jitsi_Stack ### (videobridge 46.17.104.103) (jitsi-test 185.139.68.189)
  gather_facts: true
  vars:
    docker_compose_version: "1.29.2"
  tasks:

    - name: Add new ip address in file /etc/hosts (jitsi server)
      lineinfile:
        path: /etc/hosts
        insertafter: ".*127.0.0.1"
        line: "46.17.104.103   kyryap.example.com kyryap"
        state: present
      register: lineinfileexample
      when: inventory_hostname == "jitsi"
      

    - name: Add new ip address in file /etc/hosts (videobridge server)
      lineinfile:
        path: /etc/hosts
        insertafter: ".*127.0.0.1"
        line: "185.139.68.189  jitsi-test.ru jitsi-test"
        state: present
      register: lineinfileexample
      when: inventory_hostname == "videobridge"

    - name: Update apt cache
      apt: update_cache=yes cache_valid_time=3600
      when: inventory_hostname == "videobridge"

    - name: Upgrade all apt packages
      apt: upgrade=dist
      when: inventory_hostname == "videobridge"

    - name: Install dependencies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: true
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - gnupg-agent
      when: inventory_hostname == "videobridge"

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: inventory_hostname == "videobridge"

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present
        update_cache: true
      when: inventory_hostname == "videobridge"

    - name: Install Docker
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: true
      vars:
        packages:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      when: inventory_hostname == "videobridge"

    - name: Add remote "root" user to "docker" group
      user:
        name: "root"
        group: docker
        append: true
      when: inventory_hostname == "videobridge"

    - name: Download docker-compose {{ docker_compose_version }}
      get_url:
        url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
        dest: ~/docker-compose
        mode: '+x'
      when: inventory_hostname == "videobridge"

    - name: Check docker-compose exists
      stat: path=~/docker-compose
      register: docker_compose
      when: inventory_hostname == "videobridge"

    - name: Move docker-compose to /usr/local/bin/docker-compose
      command: mv ~/docker-compose /usr/local/bin/docker-compose
      when:
        - inventory_hostname == "videobridge"
        - docker_compose.stat.exists

    - name: Download Files docker-jitsi-meet
      get_url:
        url: https://github.com/jitsi/docker-jitsi-meet/archive/refs/tags/stable-5870.tar.gz
        dest: "/home/"
      register: res
      when: inventory_hostname == "videobridge"

    - debug:
        var: res.dest
      when: inventory_hostname == "videobridge"

    - name: Extract archive docker-jitsi-meet-stable-5870.tar.gz
      unarchive:
        src: /home/docker-jitsi-meet-stable-5870.tar.gz
        dest: /home/
        remote_src: true
      when: inventory_hostname == "videobridge"

    - name: Stat check docker-jitsi-meet-stable-5870
      stat:
        path: /home/docker-jitsi-meet-stable-5870/
      register: stat_result
      when: inventory_hostname == "videobridge"

    - name: Move docker-jitsi-meet-stable-5870 to docker-jitsi-meet
      command: mv /home/docker-jitsi-meet-stable-5870/ /home/docker-jitsi-meet
      when:
        - inventory_hostname == "videobridge"
        - stat_result.stat.exists == True

    - name: Remove archive docker-jitsi-meet-stable-5870
      file:
        path: /home/docker-jitsi-meet-stable-5870.tar.gz
        state: absent
      when: inventory_hostname == "videobridge"

    - name: Here we are displaying the inventory_hostname values.
      debug:
         msg: "inventory_hostname = {{ inventory_hostname }}"

    - name: fetch.env from /home/docker-jitsi-meet/.env
      run_once: true
      fetch:
        src: /home/docker-jitsi-meet/.env
        dest: /home/.env
        flat: true
      when: inventory_hostname == "jitsi"

    - name: Copy the file .env from ansible master to videobridge server
      copy:
        src: /home/.env
        dest: /home/docker-jitsi-meet/.env
      when: inventory_hostname == "videobridge"

    - name: Replace in file "/home/docker-jitsi-meet/.env" line JVB_AUTH_USER=jvb
      replace:
        path: "{{ item.path }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      with_items:
        - {path: '/home/docker-jitsi-meet/.env', regexp: "JVB_AUTH_USER=jvb", replace: "JVB_AUTH_USER=JVB2"}
      when: inventory_hostname == "videobridge"

    - name: Backup file docker-compose.yml
      shell: cp /home/docker-jitsi-meet/docker-compose.yml /home/docker-jitsi-meet/docker-compose.yml.old
      when: inventory_hostname == "videobridge"

    - name: Remove file docker-compose.yml
      file:
        path: /home/docker-jitsi-meet/docker-compose.yml
        state: absent
      when: inventory_hostname == "videobridge"

    - name: Creating a new file docker-compose.yml with content
      copy:
        dest: "/home/docker-jitsi-meet/docker-compose.yml"
        content: |
            version: '3'

            services:
                # Video bridge
                jvb2:
                    #image: jitsi/jvb:stable-5870
                    build: ./jvb
                    restart: ${RESTART_POLICY}
                    ports:
                        - '${JVB_PORT}:${JVB_PORT}/udp'
                        - '${JVB_TCP_PORT}:${JVB_TCP_PORT}'
                    volumes:
                        - ${CONFIG}/jvb:/config:Z
                    environment:
                        - ENABLE_COLIBRI_WEBSOCKET
                        - ENABLE_OCTO
                        - DOCKER_HOST_ADDRESS
                        - XMPP_AUTH_DOMAIN
                        - XMPP_INTERNAL_MUC_DOMAIN
                        - XMPP_SERVER
                        - JVB_AUTH_USER
                        - JVB_AUTH_PASSWORD
                        - JVB_BREWERY_MUC
                        - JVB_PORT
                        - JVB_TCP_HARVESTER_DISABLED
                        - JVB_TCP_PORT
                        - JVB_TCP_MAPPED_PORT
                        - JVB_STUN_SERVERS
                        - JVB_ENABLE_APIS
                        - JVB_WS_DOMAIN
                        - JVB_WS_SERVER_ID
                        - PUBLIC_URL
                        - JVB_OCTO_BIND_ADDRESS
                        - JVB_OCTO_PUBLIC_ADDRESS
                        - JVB_OCTO_BIND_PORT
                        - JVB_OCTO_REGION
                        - TZ
                    #depends_on:
                    #    - prosody
                    networks:
                        meet.jitsi:
                            aliases:
                                - jvb.meet.jitsi
                    #           - ${JVB_AUTH_USER}.${XMPP_DOMAIN}
                    extra_hosts:
                      - "xmpp.meet.jitsi:185.139.68.189"
            networks:
                meet.jitsi:
      when: inventory_hostname == "videobridge"

    - name: Add new line  in file "10-config" on server jitsi
      lineinfile:
        path: /home/docker-jitsi-meet/prosody/rootfs/etc/cont-init.d/10-config
        insertafter: '^prosodyctl --config \$PROSODY_CFG register \$JICOFO_AUTH_USER \$XMPP_AUTH_DOMAIN \$JICOFO_AUTH_PASSWORD'
        regexp: "prosodyctl --config $PROSODY_CFG register $JICOFO_AUTH_USER $XMPP_AUTH_DOMAIN $JICOFO_AUTH_PASSWORD"
        line: "prosodyctl --config $PROSODY_CFG register JVB2 $XMPP_AUTH_DOMAIN $JVB_AUTH_PASSWORD"
        state: present
      register: lineinfileexample
      when: inventory_hostname == "jitsi"

    - name: Docker-compose build (server videobridge)
      shell:
        cmd: docker-compose build
        chdir: /home/docker-jitsi-meet/
      when: inventory_hostname == "videobridge"      

    - name: Docker-compose UP (server videobridge)
      shell:
        cmd: "docker-compose up -d --remove-orphans"
        chdir: /home/docker-jitsi-meet/
      when: inventory_hostname == "videobridge"

    - name: Add new lines to docker-compose.yml (jitsi server)
      lineinfile:
         path: /home/docker-jitsi-meet/docker-compose.yml
         insertafter: "'5280'"
         line: "{{ item }}"
         state: present
      with_items:
         - "            - '5280:5280'"
         - "            - '5347:5347'"
         - "            - '5222:5222'"
         - "         ports:"
      register: lineinfileexample
      when: inventory_hostname == "jitsi"

    - name: Replace line  - "         ports:" in file "/home/docker-jitsi-meet/docker-compose.yml"
      replace:
        path: "{{ item.path }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      with_items:
        - {path: '/home/docker-jitsi-meet/docker-compose.yml', regexp: '         ports:', replace: '        ports:'}
      when: inventory_hostname == "jitsi"

    - name: Docker-compose build (jitsi server)
      shell:
        cmd: docker-compose build
        chdir: /home/docker-jitsi-meet/
      when: inventory_hostname == "jitsi"

    - name: Docker-compose UP (jitsi server)
      shell:
        cmd: "docker-compose up -d"
        chdir: /home/docker-jitsi-meet/
      when: inventory_hostname == "jitsi"
